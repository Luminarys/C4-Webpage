From d0ba98f0182ad5dae393f8dae9ad54f1dfcb1c1a Mon Sep 17 00:00:00 2001
From: Luminarys <eumen@bensonhillbio.com>
Date: Wed, 24 Jun 2015 15:42:42 -0500
Subject: [PATCH] Had linked queries simply fill in genes, not species

---
 js/annotation_query.js |    3 +-
 js/expression_query.js |   20 +---------------
 js/gene_query.js       |   61 +----------------------------------------------
 3 files changed, 4 insertions(+), 80 deletions(-)

diff --git a/js/annotation_query.js b/js/annotation_query.js
index 7c22efe..03c3937 100644
--- a/js/annotation_query.js
+++ b/js/annotation_query.js
@@ -74,8 +74,7 @@ $(document).ready(function() {
 	//What to do when we do an AJAX query to load a popup
 	if (getQueryVar("anlink")){
 		var gene = getQueryVar("gene");
-		var species = getQueryVar("spec");
-		insertData(gene, species);
+		$("#annotationInput").val(gene);
 	}
 
 	$('*').keyup( function() {
diff --git a/js/expression_query.js b/js/expression_query.js
index 113dfef..ee02b1b 100644
--- a/js/expression_query.js
+++ b/js/expression_query.js
@@ -908,28 +908,10 @@ $(document).ready(function() {
 					first = false;
 				}else if(!skip){
 					$('#expressionInputArea').val($('#expressionInputArea').val() + '\n' + pair[1])
+			
 				}
-			}else if(pair[0] == "spec"){
-				$(".speciesSelect").val(pair[1]);
 			}
        		}
-		plot = "line"; 
-		norm = "mean";
-		qRes = genReq();
-		req = qRes[0];
-		texts = qRes[1];
-		$("#expressionForm").hide();
-		$("#goBack").show();
-		$("#goBack").css("height","136px");	
-		$("#normalization").val(plot);
-		$("#normalizationLP").val(norm);
-		$.get(req, function (data) {
-			handleInitData(data,texts);
-			$('#lower-rect').removeAttr('style');
-			$("#goBack").show();
-			$("#goBack").css("height","50px");	
-		});
-		
 	}
 	//Handle the expression query
 	$('#expressionQueryForm').submit(function(e) {
diff --git a/js/gene_query.js b/js/gene_query.js
index 83a46da..d8b219c 100644
--- a/js/gene_query.js
+++ b/js/gene_query.js
@@ -54,65 +54,8 @@ $(document).ready(function() {
 				}else{
 					$('#multiGeneInputArea').val($('#multiGeneInputArea').val() + '\n' + pair[1])
 				}
-			}else if(pair[0] == "spec"){
-				spec = pair[1];
-				if(i != 0){
-					req+="&";
-				}
-				req+=("spec="+pair[1]);
-				$(".speciesSelect").val(pair[1]);
-			}
-       		}
-		req+=("&type=" + "OR");
-		console.log(req);
-		$.get(req, function(data) {
-			$('#qTable').empty()
-			.html(data)
-			.ready(function(){
-				$("#multiGeneForm").hide();
-				$("#goBack").show();
-				if($('#basicQueryTable tr').length > 9){
-					$('#lower-rect').removeAttr('style');
-				}else{
-					$("#goBack").css("height","136px");	
-				}
-				if(data == "Invalid gene used, please try again"){
-					return 0;
-				}else{
-    				table = $('#basicQueryTable').DataTable({
-					"scrollX": true
-				});
-				addPopups();
-				addMetricPopups();
-				$("#MultiGeneQueryExpression").show();
-				$('#basicQueryTable').on( 'draw.dt', debounce(addPopups, 100));
-				$('#basicQueryTable').on( 'draw.dt', debounce(addMetricPopups, 100));
-				}
-			});
-			$("#networkGraph").click(function() {
-				var field = $("#filterChoice option:selected").text();
-				var min	= $("#min").val();
-				var max = $("#max").val();
-				console.log(typeof min);
-				if(min in window && max in window){
-					$("#qTable").empty();
-					$("#MultiGeneQueryExpression").hide();
-					$("#multiGeneForm").hide();
-					$("#goBack").show();
-					$('#lower-rect').removeAttr('style');
-					generateGraph(spec, genes, field, min, max);
-				}else if(field == "Adjacency Value"){
-					//Default to this
-					console.log("defaulting to adjacency -2/2");
-					$("#qTable").empty();
-					$("#MultiGeneQueryExpression").hide();
-					$("#multiGeneForm").hide();
-					$("#goBack").show();
-					$('#lower-rect').removeAttr('style');
-					generateGraph(spec, genes, "Adjacency Value", -2, 2);
-				}
-			});
-		});
+       			}
+		}
 	}
 
 	$("#MultiGeneQueryExpression").click(function() {
-- 
1.7.1

